// Autogenerated code from test/test.proto on Mon, July 04 2016.  DO NOT EDIT!

import Foundation
import RealmSwift
import ObjectMapper

class Point: object {
  dynamic var x: Int?
  dynamic var y: Int?
  dynamic var label: String?

  func mapping(map: Map) {
    x <- map["x"]
    y <- map["y"]
    label <- map["label"]
  }


  required convenience init?(_ map: Map) {
    self.init()
  }

}

class Line: object {
  dynamic var start: Point?
  dynamic var end: Point?
  dynamic var label: String?

  func mapping(map: Map) {
    start <- map["start"]
    end <- map["end"]
    label <- map["label"]
  }


  required convenience init?(_ map: Map) {
    self.init()
  }

}

class Polyline: object {
  dynamic var line: [Line]?
  dynamic var label: String?

  func mapping(map: Map) {
    line <- map["line"]
    label <- map["label"]
  }


  required convenience init?(_ map: Map) {
    self.init()
  }

}

