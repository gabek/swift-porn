#!/usr/bin/ruby
# 07022016 GEK Generate Swift classes from protos

require 'protocol_buffers'
require 'protocol_buffers/compiler'
require 'tempfile'
require 'protocol_buffers/compiler/file_descriptor_to_ruby'

require './EnumGenerator.rb'
require './ClassGenerator.rb'
require './stringutils.rb'
require './SwiftClassRenderer.rb'
require './FileDescriptorGenerator.rb'

include Google::Protobuf::FieldDescriptorProto::Type
include Google::Protobuf::FieldDescriptorProto::Label

filename = nil
ARGV.each do|file|
  filename = file
end

TYPE_MAPPING = {
   TYPE_DOUBLE => "Double",
   TYPE_FLOAT => "Float",
   TYPE_INT64 => "Int",
   TYPE_UINT64 => "Int",
   TYPE_INT32 => "Int",
   TYPE_FIXED64 => ":fixed64",
   TYPE_FIXED32 => ":fixed32",
   TYPE_BOOL => "Bool",
   TYPE_STRING => "String",
   TYPE_BYTES => ":bytes",
   TYPE_UINT32 => "Int",
   TYPE_SFIXED32 => ":sfixed32",
   TYPE_SFIXED64 => ":sfixed64",
   TYPE_SINT32 => ":sint32",
   TYPE_SINT64 => ":sint64",
 }

 LABEL_MAPPING = {
  LABEL_OPTIONAL => "optional",
  LABEL_REQUIRED => "required",
  LABEL_REPEATED => "repeated",
}

 def field_typename(field)
   TYPE_MAPPING[field.type] || service_typename(field.type_name)
 end

descriptor_set = FileDescriptorGenerator.generate(filename)

# protocfile = Tempfile.new("ruby-protoc")
# protocfile.binmode
# ProtocolBuffers::Compiler.compile(protocfile.path, filenames, :include_dirs => false)
# descriptor_set = Google::Protobuf::FileDescriptorSet.parse(protocfile)
# protocfile.close(true)

classes = []
enums = []

descriptor_set.file.each do |file_descriptor|

  # Messages
  file_descriptor.message_type.each do |message|
    swiftClass = ClassGenerator.handle_message(message)

    # Handle nested enums
    nested_enums = []
    message.enum_type.each do |enum|
      swiftEnum = EnumGenerator.handle_enum(enum)
      nested_enums.push(swiftEnum)
    end

    swiftClass.enums = nested_enums
    classes.push(swiftClass)
  end


  # Enums
  file_descriptor.enum_type.each do |enum|
    enums.push(EnumGenerator.handle_enum(enum))
  end

  renderString = "// Autogenerated code from #{file_descriptor.name}.  DO NOT EDIT!" + String.newline(2)
  renderString += "import Foundation" + String.newline
  renderString += "import RealmSwift" + String.newline
  renderString += "import ObjectMapper" + String.newline(2)

  renderString += SwiftClassRenderer.render(classes, enums)
  puts renderString
end
